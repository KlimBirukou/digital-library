plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.openapi.generator' version '7.15.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.5'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.13'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.7'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.5'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('openApiGenerate') {
    doNotTrackState('Disabling state tracking due to unreadable output on Windows (file lock issue).')
}

openApiGenerate {
    apiPackage = "com.example.digital_library.gen.api"
    configOptions.putAll([
            dateLibrary            : "java8",
            hideGenerationTimestamp: "true",
            useBeanValidation      : "true",
            useTags                : "true",
            delegatePattern        : "true",
            configPackage          : "com.example.digital_library.gen",
            useSpringBoot3         : "true"
    ] as Map<? extends String, ? extends String>)
    generatorName = "spring"
    inputSpec = "$rootDir/swagger.yaml".toString()
    invokerPackage = "com.example.digital_library"
    modelPackage = "com.example.digital_library.gen.model"
    outputDir = "$rootDir".toString()
}


